{"version":3,"sources":["components/card-list/CardList.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardList","props","className","children","App","state","monsters","fetch","then","response","json","data","setState","this","map","user","name","id","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAWeA,MARf,SAAkBC,GACd,OACI,qBAAKC,UAAU,YAAf,SACMD,EAAME,YCwBLC,E,kDAzBb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,SAAU,IAJA,E,gEAQO,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAACN,SAAUK,S,+BAIvC,OACE,qBAAKT,UAAU,MAAf,SACE,cAAC,EAAD,UACCW,KAAKR,MAAMC,SAASQ,KAAI,SAAAC,GAAI,OAAI,mCAAoBA,EAAKC,KAAzB,MAASD,EAAKE,e,GAnBrCC,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.83fc06a1.chunk.js","sourcesContent":["import React from 'react'\nimport './CardList.css'\n\nfunction CardList(props) {\n    return (\n        <div className=\"card-list\">\n             {props.children} \n        </div>\n    )\n}\n\nexport default CardList\n","import React from 'react';\nimport './App.css';\nimport CardList from './components/card-list/CardList'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      monsters: []\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => this.setState({monsters: data}))\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <CardList>\n        {this.state.monsters.map(user => <h1 key={user.id}> {user.name} </h1> )}\n        </CardList>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/search-box/SearchBox.jsx","components/card/Card.jsx","components/card-list/CardList.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","placeholder","handleChange","className","type","onChange","Card","props","src","user","id","alt","name","email","CardList","monsters","map","App","e","setState","searchField","target","value","state","fetch","then","response","json","data","this","filteredMonsters","filter","monster","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAGe,SAASA,EAAT,GAAmD,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aAC7C,OACI,qBAAKC,UAAU,SAAf,SACI,uBACIC,KAAK,SACLH,YAAaA,EACbI,SAAUH,M,YCEXI,MARf,SAAcC,GACV,OAAO,sBAAKJ,UAAU,iBAAf,UACH,qBAAKK,IAAG,+BAA0BD,EAAME,KAAKC,GAArC,0BAAiEC,IAAI,YAC7E,mCAAMJ,EAAME,KAAKG,KAAjB,OACA,kCAAKL,EAAME,KAAKI,MAAhB,WCKOC,MARf,SAAkBP,GACd,OACI,qBAAKJ,UAAU,YAAf,SACKI,EAAMQ,SAASC,KAAI,SAAAP,GAAI,OAAI,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,UCiCzCO,E,kDAjCb,aAAe,IAAD,8BACZ,gBAcFf,aAAe,SAAAgB,GAAC,OAAI,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAZvD,EAAKC,MAAQ,CACXR,SAAU,GACVK,YAAa,IALH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKT,SAAS,CAAEJ,SAAUa,S,+BAKlC,IAAD,EAC2BC,KAAKN,MAA/BR,EADD,EACCA,SAAUK,EADX,EACWA,YACZU,EAAmBf,EAASgB,QAAO,SAAAC,GAAO,OAAIA,EAAQpB,KAAKqB,cAAcC,SAASd,EAAYa,kBACpG,OACE,sBAAK9B,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CACEF,YAAY,kBACZC,aAAc2B,KAAK3B,eAErB,cAAE,EAAF,CAAWa,SAAUe,W,GA5BXK,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6134eaf2.chunk.js","sourcesContent":["import React from 'react'\nimport './SearchBox.css'\n\nexport default function SearchBox({ placeholder, handleChange }) {\n    return (\n        <div className=\"search\">\n            <input\n                type=\"search\"\n                placeholder={placeholder}\n                onChange={handleChange}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport './Card.css'\n\nfunction Card(props) {\n    return <div className=\"card-container\">\n        <img src={`https://robohash.org/${props.user.id}?set=set1&size=180x180`} alt=\"monster\"/>\n        <h3> {props.user.name} </h3>\n        <p> {props.user.email} </p>\n    </div>\n}\n\nexport default Card\n","import React from 'react'\nimport './CardList.css'\nimport Card from '../card/Card'\n\nfunction CardList(props) {\n    return (\n        <div className=\"card-list\">\n            {props.monsters.map(user => <Card key={user.id} user={user} /> )}\n        </div>\n    )\n}\n\nexport default CardList\n","import React from 'react';\nimport './App.css';\nimport SearchBox from './components/search-box/SearchBox'\nimport CardList from './components/card-list/CardList'\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(data => this.setState({ monsters: data }))\n  }\n\n  handleChange = e => this.setState({searchField: e.target.value})\n\n  render() {\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1> Monster's Rolodex</h1>\n        <SearchBox\n          placeholder=\"search monsters\"\n          handleChange={this.handleChange}\n        />\n        < CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}